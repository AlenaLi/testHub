// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/iproto/scene/SceneTimingUpdateReq.proto

package google.iproto.scene;

public final class SceneTimingUpdateReqProto {
  private SceneTimingUpdateReqProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SceneTimingUpdateReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.iproto.SceneTimingUpdateReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *场景ID
     * </pre>
     *
     * <code>int32 sceneid = 1;</code>
     */
    int getSceneid();

    /**
     * <pre>
     *定时器ID 如果没有ID就创建定时器，有di是修改定时器
     * </pre>
     *
     * <code>int32 timingid = 2;</code>
     */
    int getTimingid();

    /**
     * <pre>
     *true: 对应时间段打开场景，或者启用传感器触发场景，false: 对应时间段关闭场景，或者禁用传感器触发场景
     * </pre>
     *
     * <code>bool isopen = 3;</code>
     */
    boolean getIsopen();

    /**
     * <pre>
     *开始时间
     * </pre>
     *
     * <code>int32 starttime = 4;</code>
     */
    int getStarttime();

    /**
     * <pre>
     *结束时间
     * </pre>
     *
     * <code>int32 stoptime = 5;</code>
     */
    int getStoptime();

    /**
     * <pre>
     *放一周中选中的天数用逗号隔开若 "一，二，三，四，五，六，日"
     * </pre>
     *
     * <code>string wday = 6;</code>
     */
    java.lang.String getWday();
    /**
     * <pre>
     *放一周中选中的天数用逗号隔开若 "一，二，三，四，五，六，日"
     * </pre>
     *
     * <code>string wday = 6;</code>
     */
    com.google.protobuf.ByteString
        getWdayBytes();

    /**
     * <pre>
     *true: 启动传感器控制定时器， false: 启用场景控制定时器
     * </pre>
     *
     * <code>bool issensor = 7;</code>
     */
    boolean getIssensor();

    /**
     * <pre>
     *表示用户启用或停用该定时
     * </pre>
     *
     * <code>bool enable = 8;</code>
     */
    boolean getEnable();
  }
  /**
   * <pre>
   *修改场景定时器
   * </pre>
   *
   * Protobuf type {@code google.iproto.SceneTimingUpdateReq}
   */
  public  static final class SceneTimingUpdateReq extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:google.iproto.SceneTimingUpdateReq)
      SceneTimingUpdateReqOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SceneTimingUpdateReq.newBuilder() to construct.
    private SceneTimingUpdateReq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SceneTimingUpdateReq() {
      sceneid_ = 0;
      timingid_ = 0;
      isopen_ = false;
      starttime_ = 0;
      stoptime_ = 0;
      wday_ = "";
      issensor_ = false;
      enable_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SceneTimingUpdateReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              sceneid_ = input.readInt32();
              break;
            }
            case 16: {

              timingid_ = input.readInt32();
              break;
            }
            case 24: {

              isopen_ = input.readBool();
              break;
            }
            case 32: {

              starttime_ = input.readInt32();
              break;
            }
            case 40: {

              stoptime_ = input.readInt32();
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              wday_ = s;
              break;
            }
            case 56: {

              issensor_ = input.readBool();
              break;
            }
            case 64: {

              enable_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return google.iproto.scene.SceneTimingUpdateReqProto.internal_static_google_iproto_SceneTimingUpdateReq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return google.iproto.scene.SceneTimingUpdateReqProto.internal_static_google_iproto_SceneTimingUpdateReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq.class, google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq.Builder.class);
    }

    public static final int SCENEID_FIELD_NUMBER = 1;
    private int sceneid_;
    /**
     * <pre>
     *场景ID
     * </pre>
     *
     * <code>int32 sceneid = 1;</code>
     */
    public int getSceneid() {
      return sceneid_;
    }

    public static final int TIMINGID_FIELD_NUMBER = 2;
    private int timingid_;
    /**
     * <pre>
     *定时器ID 如果没有ID就创建定时器，有di是修改定时器
     * </pre>
     *
     * <code>int32 timingid = 2;</code>
     */
    public int getTimingid() {
      return timingid_;
    }

    public static final int ISOPEN_FIELD_NUMBER = 3;
    private boolean isopen_;
    /**
     * <pre>
     *true: 对应时间段打开场景，或者启用传感器触发场景，false: 对应时间段关闭场景，或者禁用传感器触发场景
     * </pre>
     *
     * <code>bool isopen = 3;</code>
     */
    public boolean getIsopen() {
      return isopen_;
    }

    public static final int STARTTIME_FIELD_NUMBER = 4;
    private int starttime_;
    /**
     * <pre>
     *开始时间
     * </pre>
     *
     * <code>int32 starttime = 4;</code>
     */
    public int getStarttime() {
      return starttime_;
    }

    public static final int STOPTIME_FIELD_NUMBER = 5;
    private int stoptime_;
    /**
     * <pre>
     *结束时间
     * </pre>
     *
     * <code>int32 stoptime = 5;</code>
     */
    public int getStoptime() {
      return stoptime_;
    }

    public static final int WDAY_FIELD_NUMBER = 6;
    private volatile java.lang.Object wday_;
    /**
     * <pre>
     *放一周中选中的天数用逗号隔开若 "一，二，三，四，五，六，日"
     * </pre>
     *
     * <code>string wday = 6;</code>
     */
    public java.lang.String getWday() {
      java.lang.Object ref = wday_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        wday_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *放一周中选中的天数用逗号隔开若 "一，二，三，四，五，六，日"
     * </pre>
     *
     * <code>string wday = 6;</code>
     */
    public com.google.protobuf.ByteString
        getWdayBytes() {
      java.lang.Object ref = wday_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        wday_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ISSENSOR_FIELD_NUMBER = 7;
    private boolean issensor_;
    /**
     * <pre>
     *true: 启动传感器控制定时器， false: 启用场景控制定时器
     * </pre>
     *
     * <code>bool issensor = 7;</code>
     */
    public boolean getIssensor() {
      return issensor_;
    }

    public static final int ENABLE_FIELD_NUMBER = 8;
    private boolean enable_;
    /**
     * <pre>
     *表示用户启用或停用该定时
     * </pre>
     *
     * <code>bool enable = 8;</code>
     */
    public boolean getEnable() {
      return enable_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (sceneid_ != 0) {
        output.writeInt32(1, sceneid_);
      }
      if (timingid_ != 0) {
        output.writeInt32(2, timingid_);
      }
      if (isopen_ != false) {
        output.writeBool(3, isopen_);
      }
      if (starttime_ != 0) {
        output.writeInt32(4, starttime_);
      }
      if (stoptime_ != 0) {
        output.writeInt32(5, stoptime_);
      }
      if (!getWdayBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, wday_);
      }
      if (issensor_ != false) {
        output.writeBool(7, issensor_);
      }
      if (enable_ != false) {
        output.writeBool(8, enable_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (sceneid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, sceneid_);
      }
      if (timingid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, timingid_);
      }
      if (isopen_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isopen_);
      }
      if (starttime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, starttime_);
      }
      if (stoptime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, stoptime_);
      }
      if (!getWdayBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, wday_);
      }
      if (issensor_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, issensor_);
      }
      if (enable_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, enable_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq)) {
        return super.equals(obj);
      }
      google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq other = (google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq) obj;

      boolean result = true;
      result = result && (getSceneid()
          == other.getSceneid());
      result = result && (getTimingid()
          == other.getTimingid());
      result = result && (getIsopen()
          == other.getIsopen());
      result = result && (getStarttime()
          == other.getStarttime());
      result = result && (getStoptime()
          == other.getStoptime());
      result = result && getWday()
          .equals(other.getWday());
      result = result && (getIssensor()
          == other.getIssensor());
      result = result && (getEnable()
          == other.getEnable());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SCENEID_FIELD_NUMBER;
      hash = (53 * hash) + getSceneid();
      hash = (37 * hash) + TIMINGID_FIELD_NUMBER;
      hash = (53 * hash) + getTimingid();
      hash = (37 * hash) + ISOPEN_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsopen());
      hash = (37 * hash) + STARTTIME_FIELD_NUMBER;
      hash = (53 * hash) + getStarttime();
      hash = (37 * hash) + STOPTIME_FIELD_NUMBER;
      hash = (53 * hash) + getStoptime();
      hash = (37 * hash) + WDAY_FIELD_NUMBER;
      hash = (53 * hash) + getWday().hashCode();
      hash = (37 * hash) + ISSENSOR_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIssensor());
      hash = (37 * hash) + ENABLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getEnable());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *修改场景定时器
     * </pre>
     *
     * Protobuf type {@code google.iproto.SceneTimingUpdateReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.iproto.SceneTimingUpdateReq)
        google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return google.iproto.scene.SceneTimingUpdateReqProto.internal_static_google_iproto_SceneTimingUpdateReq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return google.iproto.scene.SceneTimingUpdateReqProto.internal_static_google_iproto_SceneTimingUpdateReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq.class, google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq.Builder.class);
      }

      // Construct using google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        sceneid_ = 0;

        timingid_ = 0;

        isopen_ = false;

        starttime_ = 0;

        stoptime_ = 0;

        wday_ = "";

        issensor_ = false;

        enable_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return google.iproto.scene.SceneTimingUpdateReqProto.internal_static_google_iproto_SceneTimingUpdateReq_descriptor;
      }

      public google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq getDefaultInstanceForType() {
        return google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq.getDefaultInstance();
      }

      public google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq build() {
        google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq buildPartial() {
        google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq result = new google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq(this);
        result.sceneid_ = sceneid_;
        result.timingid_ = timingid_;
        result.isopen_ = isopen_;
        result.starttime_ = starttime_;
        result.stoptime_ = stoptime_;
        result.wday_ = wday_;
        result.issensor_ = issensor_;
        result.enable_ = enable_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq) {
          return mergeFrom((google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq other) {
        if (other == google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq.getDefaultInstance()) return this;
        if (other.getSceneid() != 0) {
          setSceneid(other.getSceneid());
        }
        if (other.getTimingid() != 0) {
          setTimingid(other.getTimingid());
        }
        if (other.getIsopen() != false) {
          setIsopen(other.getIsopen());
        }
        if (other.getStarttime() != 0) {
          setStarttime(other.getStarttime());
        }
        if (other.getStoptime() != 0) {
          setStoptime(other.getStoptime());
        }
        if (!other.getWday().isEmpty()) {
          wday_ = other.wday_;
          onChanged();
        }
        if (other.getIssensor() != false) {
          setIssensor(other.getIssensor());
        }
        if (other.getEnable() != false) {
          setEnable(other.getEnable());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int sceneid_ ;
      /**
       * <pre>
       *场景ID
       * </pre>
       *
       * <code>int32 sceneid = 1;</code>
       */
      public int getSceneid() {
        return sceneid_;
      }
      /**
       * <pre>
       *场景ID
       * </pre>
       *
       * <code>int32 sceneid = 1;</code>
       */
      public Builder setSceneid(int value) {
        
        sceneid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *场景ID
       * </pre>
       *
       * <code>int32 sceneid = 1;</code>
       */
      public Builder clearSceneid() {
        
        sceneid_ = 0;
        onChanged();
        return this;
      }

      private int timingid_ ;
      /**
       * <pre>
       *定时器ID 如果没有ID就创建定时器，有di是修改定时器
       * </pre>
       *
       * <code>int32 timingid = 2;</code>
       */
      public int getTimingid() {
        return timingid_;
      }
      /**
       * <pre>
       *定时器ID 如果没有ID就创建定时器，有di是修改定时器
       * </pre>
       *
       * <code>int32 timingid = 2;</code>
       */
      public Builder setTimingid(int value) {
        
        timingid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *定时器ID 如果没有ID就创建定时器，有di是修改定时器
       * </pre>
       *
       * <code>int32 timingid = 2;</code>
       */
      public Builder clearTimingid() {
        
        timingid_ = 0;
        onChanged();
        return this;
      }

      private boolean isopen_ ;
      /**
       * <pre>
       *true: 对应时间段打开场景，或者启用传感器触发场景，false: 对应时间段关闭场景，或者禁用传感器触发场景
       * </pre>
       *
       * <code>bool isopen = 3;</code>
       */
      public boolean getIsopen() {
        return isopen_;
      }
      /**
       * <pre>
       *true: 对应时间段打开场景，或者启用传感器触发场景，false: 对应时间段关闭场景，或者禁用传感器触发场景
       * </pre>
       *
       * <code>bool isopen = 3;</code>
       */
      public Builder setIsopen(boolean value) {
        
        isopen_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *true: 对应时间段打开场景，或者启用传感器触发场景，false: 对应时间段关闭场景，或者禁用传感器触发场景
       * </pre>
       *
       * <code>bool isopen = 3;</code>
       */
      public Builder clearIsopen() {
        
        isopen_ = false;
        onChanged();
        return this;
      }

      private int starttime_ ;
      /**
       * <pre>
       *开始时间
       * </pre>
       *
       * <code>int32 starttime = 4;</code>
       */
      public int getStarttime() {
        return starttime_;
      }
      /**
       * <pre>
       *开始时间
       * </pre>
       *
       * <code>int32 starttime = 4;</code>
       */
      public Builder setStarttime(int value) {
        
        starttime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *开始时间
       * </pre>
       *
       * <code>int32 starttime = 4;</code>
       */
      public Builder clearStarttime() {
        
        starttime_ = 0;
        onChanged();
        return this;
      }

      private int stoptime_ ;
      /**
       * <pre>
       *结束时间
       * </pre>
       *
       * <code>int32 stoptime = 5;</code>
       */
      public int getStoptime() {
        return stoptime_;
      }
      /**
       * <pre>
       *结束时间
       * </pre>
       *
       * <code>int32 stoptime = 5;</code>
       */
      public Builder setStoptime(int value) {
        
        stoptime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *结束时间
       * </pre>
       *
       * <code>int32 stoptime = 5;</code>
       */
      public Builder clearStoptime() {
        
        stoptime_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object wday_ = "";
      /**
       * <pre>
       *放一周中选中的天数用逗号隔开若 "一，二，三，四，五，六，日"
       * </pre>
       *
       * <code>string wday = 6;</code>
       */
      public java.lang.String getWday() {
        java.lang.Object ref = wday_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          wday_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *放一周中选中的天数用逗号隔开若 "一，二，三，四，五，六，日"
       * </pre>
       *
       * <code>string wday = 6;</code>
       */
      public com.google.protobuf.ByteString
          getWdayBytes() {
        java.lang.Object ref = wday_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          wday_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *放一周中选中的天数用逗号隔开若 "一，二，三，四，五，六，日"
       * </pre>
       *
       * <code>string wday = 6;</code>
       */
      public Builder setWday(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        wday_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *放一周中选中的天数用逗号隔开若 "一，二，三，四，五，六，日"
       * </pre>
       *
       * <code>string wday = 6;</code>
       */
      public Builder clearWday() {
        
        wday_ = getDefaultInstance().getWday();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *放一周中选中的天数用逗号隔开若 "一，二，三，四，五，六，日"
       * </pre>
       *
       * <code>string wday = 6;</code>
       */
      public Builder setWdayBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        wday_ = value;
        onChanged();
        return this;
      }

      private boolean issensor_ ;
      /**
       * <pre>
       *true: 启动传感器控制定时器， false: 启用场景控制定时器
       * </pre>
       *
       * <code>bool issensor = 7;</code>
       */
      public boolean getIssensor() {
        return issensor_;
      }
      /**
       * <pre>
       *true: 启动传感器控制定时器， false: 启用场景控制定时器
       * </pre>
       *
       * <code>bool issensor = 7;</code>
       */
      public Builder setIssensor(boolean value) {
        
        issensor_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *true: 启动传感器控制定时器， false: 启用场景控制定时器
       * </pre>
       *
       * <code>bool issensor = 7;</code>
       */
      public Builder clearIssensor() {
        
        issensor_ = false;
        onChanged();
        return this;
      }

      private boolean enable_ ;
      /**
       * <pre>
       *表示用户启用或停用该定时
       * </pre>
       *
       * <code>bool enable = 8;</code>
       */
      public boolean getEnable() {
        return enable_;
      }
      /**
       * <pre>
       *表示用户启用或停用该定时
       * </pre>
       *
       * <code>bool enable = 8;</code>
       */
      public Builder setEnable(boolean value) {
        
        enable_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *表示用户启用或停用该定时
       * </pre>
       *
       * <code>bool enable = 8;</code>
       */
      public Builder clearEnable() {
        
        enable_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:google.iproto.SceneTimingUpdateReq)
    }

    // @@protoc_insertion_point(class_scope:google.iproto.SceneTimingUpdateReq)
    private static final google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq();
    }

    public static google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SceneTimingUpdateReq>
        PARSER = new com.google.protobuf.AbstractParser<SceneTimingUpdateReq>() {
      public SceneTimingUpdateReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SceneTimingUpdateReq(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SceneTimingUpdateReq> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SceneTimingUpdateReq> getParserForType() {
      return PARSER;
    }

    public google.iproto.scene.SceneTimingUpdateReqProto.SceneTimingUpdateReq getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_google_iproto_SceneTimingUpdateReq_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_iproto_SceneTimingUpdateReq_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n.google/iproto/scene/SceneTimingUpdateR" +
      "eq.proto\022\rgoogle.iproto\"\236\001\n\024SceneTimingU" +
      "pdateReq\022\017\n\007sceneid\030\001 \001(\005\022\020\n\010timingid\030\002 " +
      "\001(\005\022\016\n\006isopen\030\003 \001(\010\022\021\n\tstarttime\030\004 \001(\005\022\020" +
      "\n\010stoptime\030\005 \001(\005\022\014\n\004wday\030\006 \001(\t\022\020\n\010issens" +
      "or\030\007 \001(\010\022\016\n\006enable\030\010 \001(\010B0\n\023google.iprot" +
      "o.sceneB\031SceneTimingUpdateReqProtob\006prot" +
      "o3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_google_iproto_SceneTimingUpdateReq_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_google_iproto_SceneTimingUpdateReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_google_iproto_SceneTimingUpdateReq_descriptor,
        new java.lang.String[] { "Sceneid", "Timingid", "Isopen", "Starttime", "Stoptime", "Wday", "Issensor", "Enable", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
